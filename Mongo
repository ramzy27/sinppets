db.EPI.aggregate([
   {
      $match: {
         quantity: {$ne: 0}
      }
   },
   {
      $lookup: {
         from: "Instruments",
         localField: "instrumentId",
         foreignField: "instrumentId",
         as: "instrument_details"
      }
   },
   {
      $unwind: "$instrument_details"
   },
   {
      $lookup: {
         from: "Underlyings",
         localField: "instrument_details.jobuuid",
         foreignField: "jobuuid",
         as: "underlying_details"
      }
   },
   {
      $unwind: "$underlying_details"
   },
   {
      $match: {
         "underlying_details.underlyingCode": {$in: [<list of underlyings>]}
      }
   },
   {
      $group: {
         _id: "$underlying_details.underlyingCode",
         total_quantity: {$sum: "$quantity"}
      }
   }
])




db.EPI.aggregate([
   {
      $match: {
         quantity: {$ne: 0}
      }
   },
   {
      $lookup: {
         from: "Instruments",
         let: { instrumentId: "$instrumentId" },
         pipeline: [
            {
               $match: {
                  $expr: {
                     $eq: ["$instrumentId", "$$instrumentId"]
                  }
               }
            }
         ],
         as: "instrument_details"
      }
   },
   {
      $unwind: "$instrument_details"
   },
   {
      $lookup: {
         from: "Underlyings",
         let: { jobuuid: "$instrument_details.jobuuid" },
         pipeline: [
            {
               $match: {
                  $expr: {
                     $eq: ["$jobuuid", "$$jobuuid"]
                  }
               }
            }
         ],
         as: "underlying_details"
      }
   },
   {
      $unwind: "$underlying_details"
   },
   {
      $match: {
         "underlying_details.underlyingCode": {$in: [<list of underlyings>]}
      }
   },
   {
      $group: {
         _id: "$underlying_details.underlyingCode",
         total_quantity: {$sum: "$quantity"}
      }
   }
])


db.EPI.aggregate([
   {
      $match: {
         quantity: { $ne: 0 }
      }
   },
   {
      $addFields: {
         instrument_details: {
            $map: {
               input: "$instrumentId",
               as: "instrumentId",
               in: {
                  $arrayElemAt: [
                     {
                        $filter: {
                           input: "$$ROOT.Instruments",
                           cond: { $eq: ["$$this.instrumentId", "$$instrumentId"] }
                        }
                     },
                     0
                  ]
               }
            }
         }
      }
   },
   {
      $unwind: "$instrument_details"
   },
   {
      $addFields: {
         underlying_details: {
            $arrayElemAt: [
               {
                  $filter: {
                     input: "$$ROOT.Underlyings",
                     cond: { $eq: ["$$this.jobuuid", "$instrument_details.jobuuid"] }
                  }
               },
               0
            ]
         }
      }
   },
   {
      $match: {
         "underlying_details.underlyingCode": { $in: [<list of underlyings>] }
      }
   },
   {
      $group: {
         _id: "$underlying_details.underlyingCode",
         total_quantity: { $sum: "$quantity" }
      }
   }
])





db.RiskResults.aggregate([
   {
      $match: {
         "folio.qty": { $ne: 0 }
      }
   },
   {
      $match: {
         "underlying.code": { $in: [<list of underlyings>] }
      }
   },
   {
      $group: {
         _id: "$underlying.code",
         total_quantity: { $sum: "$folio.qty" }
      }
   }
])



db.getCollection('risk').aggregate([
  {
    $group: {
      _id: null,
      processIdSize: {
        $sum: {
          $cond: [
            { $isArray: "$processId" },
            { $sum: { $map: { input: "$processId", in: { $bsonSize: "$$this" } } } },
            { $bsonSize: "$processId" }
          ]
        }
      }
    }
  },
  {
    $project: {
      _id: 0,
      processIdSize: 1
    }
  }
])

db.getCollection('risk').aggregate([
  {
    $match: {
      processId: { $in: [123, 34, 43] },
      rollDate: '20230202'
    }
  },
  {
    $project: {
      documentSize: { $bsonSize: "$$ROOT" }
    }
  },
  {
    $group: {
      _id: null,
      totalSize: { $sum: "$documentSize" }
    }
  },
  {
    $project: {
      _id: 0,
      totalSize: 1
    }
  }
])


db.collection.updateMany(
   { rolldate: "20230314" },
   {
      $set: {
         expireAt: {
            $where: function() {
               var date = new Date();
               date.setFullYear(2023, 2); // 2 is the zero-based index for March
               date.setDate(30); // Set the date to the last day of the month
               return date.toISOString();
            }
         }
      }
   }
)
